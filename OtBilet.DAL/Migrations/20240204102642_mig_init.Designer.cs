// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtBilet.DAL.Context;

#nullable disable

namespace OtBilet.DAL.Migrations
{
    [DbContext(typeof(OtBiletDbContext))]
    [Migration("20240204102642_mig_init")]
    partial class mig_init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OtBilet.EntityLayer.Bus", b =>
                {
                    b.Property<int>("BusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusID"));

                    b.Property<int>("BusType")
                        .HasColumnType("int");

                    b.Property<int>("PassengerCount")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Wifi")
                        .HasColumnType("bit");

                    b.HasKey("BusID");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Destination", b =>
                {
                    b.Property<int>("DestinationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinationID"));

                    b.Property<int>("Arrive")
                        .HasColumnType("int");

                    b.Property<int>("BusID")
                        .HasColumnType("int");

                    b.Property<int>("Departure")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("DepartureHour")
                        .HasColumnType("time");

                    b.Property<DateTime>("DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DestinationID");

                    b.HasIndex("BusID");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Passenger", b =>
                {
                    b.Property<int>("PassengerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassengerID"));

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("Luggage")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCardNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.HasKey("PassengerID");

                    b.HasIndex("TicketID");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Seat", b =>
                {
                    b.Property<int>("SeatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatID"));

                    b.Property<int>("BusID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("SeatID");

                    b.HasIndex("BusID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketID"));

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<string>("PNR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatID")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("TicketID");

                    b.HasIndex("DestinationID");

                    b.HasIndex("SeatID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Destination", b =>
                {
                    b.HasOne("OtBilet.EntityLayer.Bus", "Bus")
                        .WithMany("Destinations")
                        .HasForeignKey("BusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Passenger", b =>
                {
                    b.HasOne("OtBilet.EntityLayer.Ticket", "Ticket")
                        .WithMany("Passenger")
                        .HasForeignKey("TicketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Seat", b =>
                {
                    b.HasOne("OtBilet.EntityLayer.Bus", "Bus")
                        .WithMany("Seats")
                        .HasForeignKey("BusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Ticket", b =>
                {
                    b.HasOne("OtBilet.EntityLayer.Destination", "Destination")
                        .WithMany("Tickets")
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtBilet.EntityLayer.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Bus", b =>
                {
                    b.Navigation("Destinations");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Destination", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("OtBilet.EntityLayer.Ticket", b =>
                {
                    b.Navigation("Passenger");
                });
#pragma warning restore 612, 618
        }
    }
}
